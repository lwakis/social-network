{"version":3,"sources":["redux/sidebarReducer.js","redux/appReducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/News/News.jsx","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","redux/authReducer.js","redux/img/log.png","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","redux/profileReducer.js","components/Navbar/Navbar.module.css","redux/dialogsReducer.js","utils/object-helpers.js","redux/usersReducer.js","components/Navbar/FriendsImg/FriendsImg.module.css","assets/img/preloader.svg","api/apii.js"],"names":["initialState","friends","id","img","sidebarReducer","state","initialized","appReducer","action","type","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","auth","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","props","className","s","nav","item","active","to","activeClassName","activeLink","friendsImgContainer","Header","header","src","loginBlock","isAuth","login","onClick","logout","HeaderContainer","this","React","Component","connect","News","withSuspens","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","LoginPage","UsersContainer","Music","Settings","App","initializeApp","path","render","AppContainer","withRouter","dispatch","promise","getAuthUserData","Promise","all","then","SamuraiJsApp","StrictMode","basename","process","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","SET_USER_DATA","userId","email","setAuthUserData","data","a","authAPI","me","response","resultCode","password","rememberMe","messages","length","stopSubmit","_error","module","exports","style","backgroundColor","preloader","posts","likesCount","profile","status","addPostActionCreater","newPostText","setStatus","getUserProfile","usersAPI","getProfile","getStatus","profileAPI","updateStatus","newPost","filter","p","postId","dialogs","name","addMessageActionCreater","newMessageBody","text","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsers","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","followed","instance","axios","withCredentials","baseURL","headers","get","post","delete","warn","put"],"mappings":"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","file":"static/js/main.bd20b995.chunk.js","sourcesContent":["import img from \"./img/log.png\";\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, img: img},\r\n        {id: 2, img: img},\r\n        {id: 3, img: img},\r\n    ]\r\n}\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsImg from \"./FriendsImg/FriendsImg\";\r\nfunction Navbar(props) {\r\n    // let friendsImgElement = props.state.friends.map( f => <FriendsImg img={f.img}/>);\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/friends\" activeClassName={s.activeLink}>Friends</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.friendsImgContainer}>\r\n                    {/*{friendsImgElement}*/}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nfunction Header(props) {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://автолого.рф/wp-content/uploads/abarth-scorpion-logo-1920x1080.png'></img>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspens= (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    };\r\n\r\n}","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, HashRouter, Route, withRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport News from './components/News/News';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspens} from \"./hoc/withSuspense\";\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst LoginPage = React.lazy(() => import('./components/login/Login'));\nconst UsersContainer = React.lazy(() => import('./components/users/UsersContainer'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        // if (!this.props.initialized) {\n        //     return <Preloader />\n        // }\n\n        return (\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/dialogs'\n                               render={withSuspens(DialogsContainer)}/>\n                        <Route path='/profile/:userId?'\n                               render={withSuspens(ProfileContainer)}/>\n                        <Route path='/users'\n                               render={withSuspens(UsersContainer)}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/music' render={withSuspens(Music)}/>\n                        <Route path='/settings' render={withSuspens(Settings)}/>\n                        <Route path='/login' render={withSuspens(LoginPage)}/>\n                    </div>\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJsApp = (props) => {\n    return <React.StrictMode>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>\n}\n\nexport default SamuraiJsApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/redux-store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport SamuraiJsApp from \"./App\";\n\n    ReactDOM.render(\n        <SamuraiJsApp/>,\n        document.getElementById('root')\n    )\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI} from \"../api/apii\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        return {\r\n            ...state,\r\n            ...action.data\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, data: {userId, email, login, isAuth} })\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n}\r\nexport default authReducer;","module.exports = __webpack_public_path__ + \"static/media/log.cba0b89d.png\";","import preloader from \"../../../assets/img/preloader.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction Preloader(props) {\r\n    return (\r\n        <div style={ {backgroundColor: 'white'} }>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3O1NC\",\"loginBlock\":\"Header_loginBlock__1dBm_\"};","import {profileAPI, usersAPI} from \"../api/apii\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return  {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n            case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n            case SET_USER_PROFILE: {\r\n                return {...state, profile: action.profile}\r\n            }\r\n        case DELETE_POST: {\r\n            return  {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n            default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreater = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n            dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n};\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__8Z6qm\",\"item\":\"Navbar_item__3WdvU\",\"activeLink\":\"Navbar_activeLink__1b3pN\",\"friendsImgContainer\":\"Navbar_friendsImgContainer__2MIgL\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Мишаня'},\r\n        {id: 2, name: 'Анжелика'},\r\n        {id: 3, name: 'Леха'},\r\n        {id: 4, name: 'Даня'},\r\n        {id: 5, name: 'Света'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id:2, message: 'How is your it-kamasutra?'},\r\n        {id:3, message: 'Yo'},\r\n        {id:4, message: 'Yo'},\r\n        {id:5, message: 'Yo'},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let text = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: text}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreater = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map( u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/apii\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 11,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n        return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n        }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n      return async (dispatch) => {\r\n          dispatch(toggleIsFetching(true));\r\n          dispatch(setCurrentPage(currentPage));\r\n          \r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerImg\":\"FriendsImg_containerImg__1aRwW\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.c7ecb8fb.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"55eb06bb-c5c9-4015-9328-f491309cff70\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n      return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obolete method. Please profileAPI object.\");\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\n\r\n// export const getUsers2 = (currentPage = 1, pageSize = 10) => {\r\n//     return instance.get(`follow?page=${currentPage}&count=${pageSize}`)\r\n//         .then(response => {\r\n//             return response.data;\r\n//         });\r\n// }"],"sourceRoot":""}